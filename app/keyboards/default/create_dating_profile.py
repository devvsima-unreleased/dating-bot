from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from sqlalchemy import select

from database.models.profile import ProfileModel
from loader import _


def start_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [
                KeyboardButton(text=_("–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤")),
                KeyboardButton(text=_("–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É –¥–ª—è —É–ª—Å—É–≥")),
            ],
        ],
    )
    return kb


def gender_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [KeyboardButton(text=_("–ü–∞—Ä–µ–Ω—å")), KeyboardButton(text=_("–î–µ–≤—É—à–∫–∞"))],
        ],
    )
    return kb


def find_gender_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [
                KeyboardButton(text=_("–ü–∞—Ä–Ω–µ–π")),
                KeyboardButton(text=_("–î–µ–≤—É—à–µ–∫")),
                KeyboardButton(text=_("–í—Å–µ—Ö")),
            ],
        ],
    )
    return kb


def location_kb(profile: ProfileModel | None):
    builder = ReplyKeyboardBuilder()
    if profile and profile.city != "üìç":
        builder.button(text=_("–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ"))
    builder.button(
        text=_("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"),
        request_location=True,
    )
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)
